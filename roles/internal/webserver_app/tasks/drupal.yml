---

- name: Trusted Host Settings
  blockinfile:
    state: present
    block: |
      $settings['trusted_host_patterns'] = array(
      {% for host in drupal_trusted_hosts %}
        '{{ host }}',
      {% endfor %}
      );
      $settings['flysystem'] = [
        'fedora' => [
          'driver' => 'fedora',
          'config' => [
            'root' => '{{ fedora_base_url }}',
          ],
        ],
      ];
    path: "{{ drupal_trusted_hosts_file }}"
    marker: // {mark} ANSIBLE MANAGED BLOCK

- name: Uninstall core search module
  command: "{{ drush_path }} --root {{ drupal_core_path }} -y pm-uninstall search"
  register: uninstall_search
  changed_when: "'successfully uninstalled' in uninstall_search.stdout"

  #- name: Get Carapace status
  # command: "{{ drush_path }} --root {{ drupal_core_path }} pm-list --format=json"
  # register: carapace_enabled
  # changed_when: false

  #- name: Enable Carapace if not enabled
  # command: "{{ drush_path }} --root {{ drupal_core_path }} then -y carapace"
  # when: ((carapace_enabled.stdout|from_json).carapace.status|lower) != 'enabled'

  #- name: Test if theme is Carapace
  # command: "{{ drush_path }} --root {{ drupal_core_path }} -y config-get system.theme default"
  # register: drupal_theme_carapace
  # changed_when: false
  # check_mode: no

  #- name: Set theme to carapace
  # command: "{{ drush_path }} --root {{ drupal_core_path }} -y config-set system.theme default carapace"
  # when: "'carapace' not in drupal_theme_carapace.stdout"

- name: Set permissions on the public files directory
  file:
    recurse: yes
    state: directory
    path: "{{ drupal_public_filesystem }}"
    owner: "{{ webserver_app_user }}"
    group: "{{ webserver_app_user }}"
    mode: 0775

- name: Create drupal configs directory.
  file:
    state: directory
    path: "{{ webserver_app_drupal_config_path }}"
    owner: "{{ webserver_app_user }}"
    group: "{{ webserver_app_user }}"
    mode: 0744

- name: Copy ldap_authentication.settings.yml
  template:
    src: "ldap_authentication.settings.yml.j2"
    dest: "{{ drupal_core_path }}/modules/contrib/yudl8_defaults/config/install/ldap_authentication.settings.yml"
    owner: "{{ webserver_app_user }}"
    group: "{{ webserver_app_user }}"
    mode: 0440
  when: env == "staging" or env == "production"

- name: Copy ldap_servers.server.pydirectory.yml
  template:
    src: "ldap_servers.server.pydirectory.yml.j2"
    dest: "{{ drupal_core_path }}/modules/contrib/yudl8_defaults/config/install/ldap_servers.server.pydirectory.yml"
    owner: "{{ webserver_app_user }}"
    group: "{{ webserver_app_user }}"
    mode: 0440
  when: env == "staging" or env == "production"

- name: Copy ldap_servers.settings.yml
  template:
    src: "ldap_servers.settings.yml.j2"
    dest: "{{ drupal_core_path }}/modules/contrib/yudl8_defaults/config/install/ldap_servers.settings.yml"
    owner: "{{ webserver_app_user }}"
    group: "{{ webserver_app_user }}"
    mode: 0440
  when: env == "staging" or env == "production"

- name: Copy ldap_user.settings.yml
  template:
    src: "ldap_user.settings.yml.j2"
    dest: "{{ drupal_core_path }}/modules/contrib/yudl8_defaults/config/install/ldap_user.settings.yml"
    owner: "{{ webserver_app_user }}"
    group: "{{ webserver_app_user }}"
    mode: 0440
  when: env == "staging" or env == "production"

- name: Import features # noqa 301
  command: "{{ drush_path }} --root {{ drupal_core_path }} -y fim islandora_core_feature,islandora_defaults,islandora_search"

# masonry library is required by content_browser and not installed by composer due to issue 2971165.
- name: Create drupal library directory.
  file:
    state: directory
    path: "{{ drupal_external_libraries_directory }}"
    owner: "{{ webserver_app_user }}"
    group: "{{ webserver_app_user }}"
    mode: 0754

- name: Unarchive masonry library.
  unarchive:
    src: "https://github.com/desandro/masonry/archive/v3.3.2.zip"
    dest: "{{ drupal_external_libraries_directory }}"
    creates: "{{ drupal_external_libraries_directory }}/masonry"
    remote_src: yes

- name: Rename masonry directory.
  command: mv "{{ drupal_external_libraries_directory }}/masonry-3.3.2" "{{ drupal_external_libraries_directory }}/masonry"
  args:
    creates: "{{ drupal_external_libraries_directory }}/masonry"

# pdf.js library
- name: ensure pdf.js directory exists
  file:
    path: "{{ drupal_external_libraries_directory }}/pdf.js"
    state: directory
    mode: 0754

- name: Unarchive pdf.js library
  unarchive:
    src: "https://github.com/mozilla/pdf.js/releases/download/v2.0.943/pdfjs-2.0.943-dist.zip"
    dest: "{{ drupal_external_libraries_directory }}/pdf.js"
    creates: "{{ drupal_external_libraries_directory }}/pdf.js/build"
    remote_src: yes

- name: Add project's /vendor/bin to $PATH (ubuntu)
  lineinfile:
    path: ~/.profile
    line: 'PATH="$PATH:{{ webserver_document_root }}/drupal/vendor/bin"'
    state: present
  become: false
  when: ansible_os_family == "Debian"
