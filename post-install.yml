---

- hosts: webserver
  become: yes

  # add some vars here so we can run with --start-at-task if desired
  vars:
    webserver_app_user: "{% if ansible_os_family == 'RedHat' %}apache{% else %}www-data{% endif %}"
    vagrant_user: "vagrant"

  tasks:

    - name: Add admin to fedoraAdmin role # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y urol fedoraadmin admin"

    # Set jsonld module to strip ?_format=jsonld
    - name: Set JSONLD Config # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y cset --input-format=yaml jsonld.settings remove_jsonld_format {{ drupal_jsonld_remove_format }}"

    - name: Set Gemini URL # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y cset --input-format=yaml islandora.settings gemini_url {{ crayfish_gemini_base_url }}"

    - name: Set JWT Expiry # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y cset islandora.settings jwt_expiry '{{ islandora_jwt_expiry }}'"

    - name: Set pseudo field bundles # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y cset --input-format=yaml islandora.settings gemini_pseudo_bundles.{{ item.0 }} {{ item.1 }}"
      with_indexed_items: "{{ drupal_gemini_pseudo_bundles }}"

    - name: Set media urls # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y cset --input-format=yaml media.settings standalone_url true"

    - name: Set iiif url # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y cset --input-format=yaml islandora_iiif.settings iiif_server {{ openseadragon_iiiv_server }}"

    - name: Set iiif manifest view # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y cset --input-format=yaml openseadragon.settings manifest_view iiif_manifest"

    - name: Run Islandora migration # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y -l localhost:{{ apache_listen_port }} --userid=1 mim --group=islandora"

    - name: Run York migration # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y -l localhost:{{ apache_listen_port }} --userid=1 mim --group=york"

    - name: Set site email # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y -l localhost:{{ apache_listen_port }} cset system.site mail {{ certbot_admin_email }}"
      when: env == "staging" or env == "production"

    - name: Set admin only account creation # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y -l localhost:{{ apache_listen_port }} cset user.settings register admin_only"

    - name: Add vagrant user to webserver app user group
      user: name={{ vagrant_user }}
            group={{ webserver_app_user }}
            append=yes

    - name: Create the default files simpletest directory
      file:
        path: "{{ drupal_public_filesystem }}/simpletest"
        state: directory
        owner: "{{ webserver_app_user }}"
        group: "{{ webserver_app_user }}"
        mode: 0775
        recurse: yes
      when: env == "dev"

    - name: Create the sites simpletest directory
      file:
        path: "{{ drupal_core_path }}/sites/simpletest"
        state: directory
        owner: "{{ webserver_app_user }}"
        group: "{{ webserver_app_user }}"
        mode: 0775
        recurse: yes
      when: env == "dev"

    - name: Chown islandora core feature
      file:
        dest: "{{ drupal_core_path }}/modules/contrib/islandora/modules/islandora_core_feature"
        state: directory
        owner: "{{ webserver_app_user }}"
        group: "{{ webserver_app_user }}"
        mode: 0775
        recurse: yes

    - name: Chown islandora_defaults feature
      file:
        dest: "{{ drupal_core_path }}/modules/contrib/yudl8_defaults"
        state: directory
        owner: "{{ webserver_app_user }}"
        group: "{{ webserver_app_user }}"
        mode: 0775
        recurse: yes

    - name: Chown controlled access terms default configuration
      file:
        dest: "{{ drupal_core_path }}/modules/contrib/controlled_access_terms/modules/controlled_access_terms_defaults"
        state: directory
        owner: "{{ webserver_app_user }}"
        group: "{{ webserver_app_user }}"
        mode: 0775
        recurse: yes

    - name: Apply patched LDAP library https://www.drupal.org/project/ldap/issues/3151284
      template:
        src: Connection.php.j2
        dest: "/var/www/html/drupal/vendor/grahl/ldap/Adapter/ExtLdap/Connection.php"
        owner: "{{ webserver_app_user }}"
        group: "{{ webserver_app_user }}"
        mode: 0755
      when: env == "staging" or env == "production"

    - name: Download Islandora Workbench Integration module
      git:
        repo: https://github.com/mjordan/islandora_workbench_integration.git
        dest: "{{ drupal_core_path }}/modules/contrib/islandora_workbench_integration"

    - name: Enable Islandora Workbench Integration module # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y en islandora_workbench_integration"

    - name: Clear cache # noqa 301
      command: "{{ drush_path }} --root {{ drupal_core_path }} -y cr"
